/*
 * Fonts
 *
 */

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
	@each $fs-breakpoint, $fs-font-size in $fs-map {
		@if $fs-breakpoint == null {
			@include make-font-size($fs-font-size);
		}
		@else {
			// If $fs-font-size is a key that exists in
			// $fs-breakpoints, use the value
			@if map-has-key($fs-breakpoints, $fs-breakpoint) {
				$fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
			}
			@media screen and (min-width: $fs-breakpoint) {
				@include make-font-size($fs-font-size);
			}
		}
	}
}

// Utility function for mixin font-size

@mixin make-font-size($fs-font-size) {
	// If $fs-font-size is a list, include
	// both font-size and line-height
	@if type-of($fs-font-size) == "list" {
		font-size: nth($fs-font-size, 1);
		@if (length($fs-font-size) > 1) {
			line-height: nth($fs-font-size, 2);
		}
	}
	@else {
		font-size: $fs-font-size;
	}
}

/*
 * Blocks
 *
 */

/*
 * Blocks
@include space(margin, bottom, red);
@include space(padding, all, red);

 $space: (
  red: (
  	null: 10px,
  	sm: 10px,
  	md: 12px,
  	lg: 14px,
  	xl: 16px
  ),
  orange : (
  	null: 15px,
  	sm: 20px,
  	md: 25px,
  	lg: 30px,
  	xl: 35px
  ),
  green: (
  	null: 10px,
  	sm: 20px,
  	md: 20px,
  	lg: 30px,
  	xl: 30px
  )
);
 */

@mixin space($type, $direction, $amountColor, $breakpoints: $space_breakpoints, $space: $space) {
	$amountArr: map-get($space, $amountColor);
	@each $breakpoint, $amount in $amountArr {
		@if $breakpoint == null {
			@if $type == margin {
				@include margin($direction, $amount);
			}
			@else {
				@include padding($direction, $amount);
			}
		}
		@else {
			@if map-has-key($breakpoints, $breakpoint) {
				$breakpoint: map-get($breakpoints, $breakpoint);
			}
			@media (min-width: $breakpoint) {
				@if $type == margin {
					@include margin($direction, $amount);
				}
				@else {
					@include padding($direction, $amount);
				}
			}
		}
	}
}
@mixin margin($direction, $amount) {
	@if $direction == all {
		margin: $amount;
	}
	@else if $direction == top {
		margin-top: $amount;
	}
	@else if $direction == left {
		margin-left: $amount;
	}
	@else if $direction == right {
		margin-right: $amount;
	}
	@else {
		margin-bottom: $amount;
	}
}
@mixin padding($direction, $amount) {
	@if $direction == all {
		padding: $amount;
	}
	@else if $direction == top {
		padding-top: $amount;
	}
	@else if $direction == left {
		padding-left: $amount;
	}
	@else if $direction == right {
		padding-right: $amount;
	}
	@else {
		padding-bottom: $amount;
	}
}